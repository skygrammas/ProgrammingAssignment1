# PROGRAM: Programming Assignment 1 (String to Hex)
	.data                                                        #data section
	string: .space 9                                             #allocates 9 bytes of space in memory
	error_string: .asciiz "\nInvalid hexadecimal number.\n"      #string to output if input is not hex
	input_string: .asciiz "\nEnter a string of 8 characters: \n" #string to output to request user input
	.text                                                        #code section
main:

	li $v0, 10                                                   #exit program
	syscall

invalid:
	li $v0, 4                                                    #syscall code for printing string
	la $a0, error_string                                         #load address of string to print into $a0

request_input:
	li $v0, 4                                                    #syscall code for printing string
	la $a0, input_string                                         #load address of string to print into $a0

valid:


1. request output
2. read input
3. evaluate input
	put 0 or 1 in reg
	if reg==0 //false
		(convert)
	if reg==1 //true
		print error string
		exit
4. exit

###########PROGRAMMING ASSIGNMENT IN C++############
#include <string>
#include <iostream>
using namespace std;

int main()
{
	string user_input;
	bool valid_input = 1;
	cout << "Enter a string up to 8 characters: ";
	cin >> user_input;
	int stringLength = user_input.length(), hexValue = 0;
	for (int i = 0; i < stringLength; i++) 
	{
		if ((user_input[i] == '0') || (user_input[i] == '1') || (user_input[i] == '2') || (user_input[i] == '3') || (user_input[i] == '4') || (user_input[i] == '5') || (user_input[i] == '6') 
			|| (user_input[i] == '7') || (user_input[i] == '8') || (user_input[i] == '9') || (user_input[i] == 'a') || (user_input[i] == 'b') || (user_input[i] == 'c') || (user_input[i] == 'd') 
			|| (user_input[i] == 'e') || (user_input[i] == 'f') || (user_input[i] == 'A') || (user_input[i] == 'B') || (user_input[i] == 'C') || (user_input[i] == 'D') || (user_input[i] == 'E') 
			|| (user_input[i] == 'F'))
		{
			int charValue = 0;
			switch (user_input[i])
			{
			case '0':
				charValue = 0;
				break;
			case '1':
				charValue = 1;
				break;
			case '2':
				charValue = 2;
				break;
			case '3':
				charValue = 3;
				break;
			case '4':
				charValue = 4;
				break;
			case '5':
				charValue = 5;
				break;
			case '6':
				charValue = 6;
				break;
			case '7':
				charValue = 7;
				break;
			case '8':
				charValue = 8;
				break;
			case '9':
				charValue = 9;
				break;
			case 'a':
				charValue = 10;
				break;
			case 'b':
				charValue = 11;
				break;
			case 'c':
				charValue = 12;
				break;
			case 'd':
				charValue = 13;
				break;
			case 'e':
				charValue = 14;
				break;
			case 'f':
				charValue = 15;
				break;
			case 'A':
				charValue = 10;
				break;
			case 'B':
				charValue = 11;
				break;
			case 'C':
				charValue = 12;
				break;
			case 'D':
				charValue = 13;
				break;
			case 'E':
				charValue = 14;
				break;
			case 'F':
				charValue = 15;
				break;
			}
			hexValue += charValue * ( pow(16, (stringLength - i - 1)) );
			cout << "Length: " << stringLength << " Index: " << i << " Hex value: " << charValue << endl << hexValue << endl;
		}
		else 
		{
			cout << "Invalid hexadecimal number." << endl;
			valid_input = 0;
			return 0;
		}
	}
	if (valid_input == 1) 
	{
		cout << endl << hexValue << endl;
	}
	return 0;
}